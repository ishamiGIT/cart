steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      "build",
      "-t", "us-central1-docker.pkg.dev/$PROJECT_ID/sdlc-demo/cart-app:$COMMIT_SHA",
      "-t", "us-central1-docker.pkg.dev/$PROJECT_ID/sdlc-demo/cart-app:latest",
      "cart-app"
    ]

  # Push the image to Artifact Registry with both commit SHA and latest tags
  - name: 'gcr.io/cloud-builders/docker'
    args: ["push", "us-central1-docker.pkg.dev/$PROJECT_ID/sdlc-demo/cart-app:$COMMIT_SHA"]
  - name: 'gcr.io/cloud-builders/docker'
    args: ["push", "us-central1-docker.pkg.dev/$PROJECT_ID/sdlc-demo/cart-app:latest"]

  # Get GKE credentials
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      "container", "clusters", "get-credentials", "${_GKE_CLUSTER}",
      "--region", "${_GKE_LOCATION}",
      "--project", "$PROJECT_ID"
    ]

  # Update the image for the Kubernetes Deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [
      "set", "image",
      "deployment/${_K8S_DEPLOYMENT}",
      "${_K8S_CONTAINER}=us-central1-docker.pkg.dev/$PROJECT_ID/sdlc-demo/cart-app:$COMMIT_SHA",
      "--namespace", "${_K8S_NAMESPACE}"
    ]
    env:
      - 'CLOUDSDK_COMPUTE_REGION=${_GKE_LOCATION}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'

images: [
  "us-central1-docker.pkg.dev/$PROJECT_ID/sdlc-demo/cart-app:$COMMIT_SHA",
  "us-central1-docker.pkg.dev/$PROJECT_ID/sdlc-demo/cart-app:latest"
]

# Substitution variables to be defined in the trigger settings
substitutions:
  _GKE_CLUSTER: "your-gke-cluster-name"  # Replace with your cluster name
  _GKE_LOCATION: "your-gke-region"      # Replace with your cluster region (e.g., us-central1)
  _K8S_DEPLOYMENT: "cart-app-deployment" # Replace with your Kubernetes Deployment name
  _K8S_CONTAINER: "cart-app-container"   # Replace with the container name in your Deployment spec
  _K8S_NAMESPACE: "default"            # Replace with your Kubernetes namespace
options:
  requestedVerifyOption: VERIFIED
  logging: CLOUD_LOGGING_ONLY
