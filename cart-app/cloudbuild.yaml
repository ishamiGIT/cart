steps:
  # Step 1: Build the Docker image
  # The image is tagged with the Git short commit SHA ($SHORT_SHA).
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build'
    args: [
      'build',
      '-t',
      'us-central1-docker.pkg.dev/ishamirulinda-sdlc/sdlc-demo/recommendation-app:${SHORT_SHA}',
      './recommendation-app'  # Path to the directory containing the Dockerfile
    ]

  # Step 2: Update the Kubernetes deployment manifest in the workspace
  # This command replaces the ':latest' tag in the deployment.yaml
  # with the actual $SHORT_SHA for this build. This change is only in the Cloud Build workspace.
  - name: 'alpine' # Using a small image for shell utilities like sed
    id: 'UpdateManifest'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Updating deployment.yaml to use image tag: ${SHORT_SHA}"
        sed -i "s|:IMAGE_PLACEHOLDER|:${SHORT_SHA}|g" recommendation-app/deployment.yaml
        echo "--- Updated deployment.yaml for this build ---"
        cat recommendation-app/deployment.yaml
        echo "--- End of deployment.yaml ---"

  # Step 3: Deploy to Kubernetes
  - name: 'gcr.io/cloud-builders/gcloud' # Corrected path
    id: 'Deploy'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get credentials for the GKE cluster
        gcloud container clusters get-credentials tf-cluster --region us-central1 --project ishamirulinda-sdlc

        # Apply the manifest, kubectl will now use the credentials obtained above
        kubectl apply -f recommendation-app/kubernetes/deployment.yaml

# Images to push to Artifact Registry.
# Cloud Build automatically pushes images listed here after the steps are done.
images:
  - 'us-central1-docker.pkg.dev/ishamirulinda-sdlc/sdlc-demo/recommendation-app:${SHORT_SHA}'

options:
  requestedVerifyOption: VERIFIED
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
